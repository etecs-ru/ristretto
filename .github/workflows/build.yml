name: build

permissions: read-all

on:
  push:
    tags:
      - v*
    branches:
      - master
  pull_request:
  workflow_call:

jobs:
  run:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    env:
      OS: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v2.4.0

      - name: Install Go
        uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v2.1.5
        with:
          go-version: 1.18

      - name: Go Format
        run: gofmt -s -w . && git diff --exit-code

      - name: Go Tidy
        run: go mod tidy && git diff --exit-code

      - name: Go Mod
        run: go mod download

      - name: Go Generate
        run: go generate ./... && git diff --exit-code

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3.7.0
        with:
          version: v1.45.0

      - name: Go Build
        run: go build -v ./...

      - name: Go Test
        run: go test -v -tags -race -shuffle=on -coverprofile="coverage.txt" ./...

      - name: Upload Coverage
        uses: codecov/codecov-action@40a12dcee2df644d47232dde008099a3e9e4f865 # v2.1.0
        if: matrix.os == 'ubuntu-latest'
        continue-on-error: true
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          file: ./coverage.txt
          flags: unittests # optional
          name: codecov-umbrella # optional
          fail_ci_if_error: false
